{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About This is just a dump of notes, ideas, thoughts that might benefit others.","title":"About"},{"location":"#about","text":"This is just a dump of notes, ideas, thoughts that might benefit others.","title":"About"},{"location":"Theory/Recurrence%20Relation%20Cookbook/","text":"Recurrence Relation - Cookbook Extended Master's Theorem for Divide and Conquer 1 4 \\[ T(n) = a T(n/b) + \\Theta(n^k \\log^p n) \\] Where, \\[ \\begin{aligned} a & \\ge 1 \\\\ b & > 1 \\\\ k & \\ge 0 \\\\ p & \\in Real \\end{aligned} \\] If \\(a > b^k\\) , then \\(T(n) = \\Theta(n^{\\log_b a})\\) If \\(a = b^k\\) , then if \\(p > -1\\) , then \\(T(n) = \\Theta(n^{\\log_b a} \\log^{p+1}n)\\) if \\(p = -1\\) , then \\(T(n) = \\Theta(n^{log_b a} \\log\\log n)\\) if \\(p < -1\\) , then \\(T(n) = \\Theta(n^{\\log_b a})\\) If \\(a < b^k\\) , then if \\(p \\ge 0\\) , then \\(T(n) = \\Theta(n^k \\log^pn)\\) if \\(p < 0\\) , then \\(T(n) = \\Theta(n^k)\\) Change of Variables 2 We can apply Master's theorem on recurrences like: \\[ T(n) = T(\\sqrt{n}) + 2 \\] \\[ \\therefore T(2^n) = T(2^{n/2}) + 2 \\] \\[ \\text{Let} \\ S(m) = T(2^m) \\] \\[ \\therefore S(m) = S(m/2) + 2 \\] After applying Master's theorem, we get \\(S(m) = \\Theta(\\log_2(m))\\) That is, \\[ T(2^m) = \\Theta(\\log_2(m)) \\] Put \\(m \\rightarrow \\log_2(n)\\) \\[ T(2^{\\log_2(n)}) = \\Theta(\\log_2(\\log_2(n))) \\] \\[ T(n) = \\Theta(\\log_2(\\log_2(n))) \\] Master Theorem For Subtract and Conquer Recurrences 3 Solves recurrences of the form \\[ T(n) = a \\cdot T(n-b)+\\Theta(n^k) \\] for some constants \\(c, \\ a>0, \\ b>0, \\ k \\ge 0\\) If a<1 then \\(T(n) = \\Theta(n^k)\\) If a=1 then \\(T(n) = \\Theta(n^{k+1})\\) if a>1 then \\(T(n) = \\Theta(n^ka^{n/b})\\) Akra-Bazzi Method Read this article first. Can solve equations of form. See Wikipedia-Formulation \\[ T(x)=g(x)+\\sum _{{i=1}}^{k}a_{i}T(b_{i}x+h_{i}(x))\\qquad {\\text{for }}x\\geq x_{0}. \\] Note \\(0 < b < 1\\) , hence cannot be applied for equations like \\(T(n) = T(n-1) + 1\\) This method applies to a very wide variety of divide-and-conquer equations! References https://www.baeldung.com/cs/master-theorem-asymptotic-analysis \u21a9 http://iiitdm.ac.in/old/Faculty_Teaching/Sadagopan/pdf/DAA/new/recurrence-relations-V3.pdf \u21a9 https://www.geeksforgeeks.org/master-theorem-subtract-conquer-recurrences/ \u21a9 https://www.geeksforgeeks.org/advanced-master-theorem-for-divide-and-conquer-recurrences/ \u21a9","title":"Recurrence Relation - Cookbook"},{"location":"Theory/Recurrence%20Relation%20Cookbook/#recurrence-relation-cookbook","text":"","title":"Recurrence Relation - Cookbook"},{"location":"Theory/Recurrence%20Relation%20Cookbook/#extended-masters-theorem-for-divide-and-conquer-1-4","text":"\\[ T(n) = a T(n/b) + \\Theta(n^k \\log^p n) \\] Where, \\[ \\begin{aligned} a & \\ge 1 \\\\ b & > 1 \\\\ k & \\ge 0 \\\\ p & \\in Real \\end{aligned} \\] If \\(a > b^k\\) , then \\(T(n) = \\Theta(n^{\\log_b a})\\) If \\(a = b^k\\) , then if \\(p > -1\\) , then \\(T(n) = \\Theta(n^{\\log_b a} \\log^{p+1}n)\\) if \\(p = -1\\) , then \\(T(n) = \\Theta(n^{log_b a} \\log\\log n)\\) if \\(p < -1\\) , then \\(T(n) = \\Theta(n^{\\log_b a})\\) If \\(a < b^k\\) , then if \\(p \\ge 0\\) , then \\(T(n) = \\Theta(n^k \\log^pn)\\) if \\(p < 0\\) , then \\(T(n) = \\Theta(n^k)\\)","title":"Extended Master's Theorem for Divide and Conquer 1 4"},{"location":"Theory/Recurrence%20Relation%20Cookbook/#change-of-variables-2","text":"We can apply Master's theorem on recurrences like: \\[ T(n) = T(\\sqrt{n}) + 2 \\] \\[ \\therefore T(2^n) = T(2^{n/2}) + 2 \\] \\[ \\text{Let} \\ S(m) = T(2^m) \\] \\[ \\therefore S(m) = S(m/2) + 2 \\] After applying Master's theorem, we get \\(S(m) = \\Theta(\\log_2(m))\\) That is, \\[ T(2^m) = \\Theta(\\log_2(m)) \\] Put \\(m \\rightarrow \\log_2(n)\\) \\[ T(2^{\\log_2(n)}) = \\Theta(\\log_2(\\log_2(n))) \\] \\[ T(n) = \\Theta(\\log_2(\\log_2(n))) \\]","title":"Change of Variables 2"},{"location":"Theory/Recurrence%20Relation%20Cookbook/#master-theorem-for-subtract-and-conquer-recurrences-3","text":"Solves recurrences of the form \\[ T(n) = a \\cdot T(n-b)+\\Theta(n^k) \\] for some constants \\(c, \\ a>0, \\ b>0, \\ k \\ge 0\\) If a<1 then \\(T(n) = \\Theta(n^k)\\) If a=1 then \\(T(n) = \\Theta(n^{k+1})\\) if a>1 then \\(T(n) = \\Theta(n^ka^{n/b})\\)","title":"Master Theorem For Subtract and Conquer Recurrences 3"},{"location":"Theory/Recurrence%20Relation%20Cookbook/#akra-bazzi-method","text":"Read this article first. Can solve equations of form. See Wikipedia-Formulation \\[ T(x)=g(x)+\\sum _{{i=1}}^{k}a_{i}T(b_{i}x+h_{i}(x))\\qquad {\\text{for }}x\\geq x_{0}. \\] Note \\(0 < b < 1\\) , hence cannot be applied for equations like \\(T(n) = T(n-1) + 1\\) This method applies to a very wide variety of divide-and-conquer equations!","title":"Akra-Bazzi Method"},{"location":"Theory/Recurrence%20Relation%20Cookbook/#references","text":"https://www.baeldung.com/cs/master-theorem-asymptotic-analysis \u21a9 http://iiitdm.ac.in/old/Faculty_Teaching/Sadagopan/pdf/DAA/new/recurrence-relations-V3.pdf \u21a9 https://www.geeksforgeeks.org/master-theorem-subtract-conquer-recurrences/ \u21a9 https://www.geeksforgeeks.org/advanced-master-theorem-for-divide-and-conquer-recurrences/ \u21a9","title":"References"}]}